# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: SSH Remote Commands
      # You may pin to the exact commit or the version.
      # uses: appleboy/ssh-action@029f5b4aeeeb58fdfe1410a5d17f967dacf36262
      uses: appleboy/ssh-action@v1.0.3
      with:
        # SSH host address.
        host: ${{ secrets.REMOTE_SSH_HOST }}
        # SSH port number.
        # SSH username.
        username: ${{ secrets.REMOTE_SSH_USERNAME }}
        # Content of the SSH private key. For example, the raw content of ~/.ssh/id_rsa.
        key: ${{ secrets.REMOTE_SSH_KEY }}
        # Commands to be executed.
        script: |
          cd /home/ubuntu/app
          ./deploy.sh
          nohup java -jar -Dspring.config.location=classpath:/application.yml,/home/ubuntu/app/application-real.yml,/home/ubuntu/app/application-real-db.yml /home/ubuntu/app/gomdolog-0.0.1-SNAPSHOT.jar 2>&1 &  
          

            
